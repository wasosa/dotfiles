#!/usr/bin/env python

"""Calculates percent of cpu usage in 100ms and prints graphically"""

from __future__ import print_function
import time

# Based on column info from: http://www.linuxhowtos.org/System/procstat.htm
#
# Columns are:
#
# 0 - label
# 1 - user
# 2 - nice
# 3 - system
# 4 - idle
# 5 - iowait
# 6 - irq
# 7 - softirq


def proc_stat():
    """Returns first line in /proc/stat"""
    with open('/proc/stat') as handle:
        return handle.readline()


def total_from_proc_stat(line):
    """Returns value of Total column in a line from /proc/stat"""
    numbers = [int(x) for x in line.split()[1:7]]
    return sum(numbers)


def idle_from_proc_stat(line):
    """Returns value of Idle column in a line from /proc/stat"""
    return int(line.split()[4])


def print_percentage(percentage):
    """Print a one-line histogram to represent percentage"""

    total = 50
    count = (percentage * total) / 100
    fill = '=' * count
    blank = ' ' * (total - count)
    left = '['
    right = ']'

    print(" CPU: %2d%% %c%s%s%c" % (percentage, left, fill, blank, right))


def main():
    """Main function"""

    data1 = proc_stat()
    time.sleep(0.100)
    data2 = proc_stat()

    idle = idle_from_proc_stat(data2) - idle_from_proc_stat(data1)
    total = total_from_proc_stat(data2) - total_from_proc_stat(data1)

    # Multiply by 1005 and divide by 10 to round to the nearest 1%
    percent_idle = (idle * 1005) / (total * 10)
    percent_used = 100 - percent_idle

    print_percentage(percent_used)


if __name__ == "__main__":
    main()

# end of file
